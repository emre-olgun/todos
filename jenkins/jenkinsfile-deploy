pipeline {
    agent any
    environment {
        APP_NAME="todo-app-pern"
        APP_REPO_NAME="chart-repo/${APP_NAME}"
        AWS_ACCOUNT_ID=sh(script:'aws sts get-caller-identity --query Account --output text', returnStdout:true).trim()
        AWS_REGION="us-east-1"
        ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
    }
    stages {
        stage('Create ECR Repo') {
            steps {
                echo "Creating ECR Repo for ${APP_NAME} app"
                sh '''
                aws ecr describe-repositories --region ${AWS_REGION} --repository-name ${APP_REPO_NAME} || \
                         aws ecr create-repository \
                         --repository-name ${APP_REPO_NAME} \
                         --image-scanning-configuration scanOnPush=true \
                         --image-tag-mutability MUTABLE \
                         --region ${AWS_REGION}
                '''
            }
        }

        stage('Prepare Tags for Docker Images') {
            steps {
                echo 'Preparing Tags for Docker Images'
                script {
                    env.IMAGE_TAG_REACT="${ECR_REGISTRY}/${APP_REPO_NAME}:react-b${BUILD_NUMBER}"
                    env.IMAGE_TAG_NODE="${ECR_REGISTRY}/${APP_REPO_NAME}:node-b${BUILD_NUMBER}"
                    env.IMAGE_TAG_POSTGRES="${ECR_REGISTRY}/${APP_REPO_NAME}:postgres-b${BUILD_NUMBER}"
                    sh 'printenv IMAGE_TAG_REACT'
                }
            }
        }
        stage('Build App Docker Images') {
            steps {
                echo 'Building App Images'
                sh ". ./jenkins/image-build.sh"
                sh 'docker image ls'
            }
        }
        stage('Push Images to ECR Repo') {
            steps {
                echo "Pushing ${APP_NAME} Images to ECR Repo"
                sh ". ./jenkins/image-push.sh"
            }
        }
        stage('Deploy App with HELM') {
            steps {
                echo "Deploying App on Kubernetes"
                sh '. ./jenkins/deploy_app.sh'
            }
        }
    }
        post {
        always {
            echo 'Deleting all local images'
            sh 'docker image prune -af'
            echo 'Delete the Image Repository on ECR'
            sh """
                aws ecr delete-repository \
                  --repository-name ${APP_REPO_NAME} \
                  --region ${AWS_REGION}\
                  --force
                """
        }
    }
}
